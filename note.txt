(Project 생성)
git clone http://mod.lge.com/hub/tdd/heytas.git

yarn create react-app prjname
npm init react-app prjname
creat-react-app prjname

(component 선언방식)
함수형 컴포넌트 : 주로 많이 사용 + hook : function App { }
 - 메모리를 적게 먹고 빠름, state와 lifecycle API사용 불가하다는 단점이 있음. - Hook을 이용해서 해결 가능. (권장사항)
클래스형 컴포넌트 :  class App extends component {}
 - 클래스 컴포넌트와 함수형 컴포넌트의 차이점은 클래스형 컴포넌트의 경우 state 기능 및 lifecycle기능을 사용할 수 있음. 임의 메서드를 정의할 수 있음.

(모듈 삽입)
nodejs 는 require
enact 는 import 

(Bundler)
webpack, parcel, browserify --> webpack loader를 통해 불러와 사용가능

(바벨)
최신 javascripts로 작성된 코드를 ES5형태의 코드로 변환 - 구형 브라우져와의 호환때문에....
ES5 이후 ECMAScript 2015(ES6) ECMAScript 2016(ES7)


(JSX)
javascripts 확장문법 - html과 유사
쉽게 UI를 rendering가능
JSX 내부에서 javascripts를 사용하려면 {}로 감싸면 됨. {name}
주석 처리는 {/*  */}
HTML에서는 class를 사용 -- JSX는 className 을 사용해야 함.

(함수형 component)
function 형태로 component를 만들어 사용


(Fragment)
component 는 반드시 부모 요소로 감싸져야 함. 보통 <div></div>를 많이 쓰나 { Fragment } 를 import 해서 <Fragement></Fragement>를 사용해도 됨.
<></> 처럼 표시도 가능함.

(변수)
const a; //상수를 저장, scope는 { } 단위임.
let a; // read/write, scope는 { } 단위임.
var a; // ES6 이전에 사용하던 방식 - var 는 scope가 function 단위임.


(비교연산)
=== 같음

(논리연산)
&& , ||, 

(ES6의 Arrow 함수)
function App {} -----  () => {} 로 변경 가능.  arrow 함수는 this가 인스턴스를 가리킴. 객체 내부의 this와 화살표 함수 내부의 this 가 가리키는 것은 서로 다름 (객체/인스턴스)

(props)
properties의 줄임말...
property를 생성해서 component로 값을 넘길 수 있다. - props.js 예제 참고
const App = () => { return (<div>??</div>); }